var searchIndex = new Map(JSON.parse('[["ruv_fann",{"t":"EPPPEEEEEEPEEEEEEPPEGEEEEECNNCQNNNCNNNNCNNNCNCCCCQCNCQNNNNGPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPFPFFGFFFFFFPPPPPPONOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOONNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNOONOOOOONOOONNOOOOONNNNNNNNNOOONNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNOOOOFNNNNNNNNNNNNONNNNNONNNNNNOPPPPPPPPGPPPPPPPPPGFFPPPPPPPPPGPPPPPPPPPGPPPPPPPPPPFGPPPGIPPPPPPPGPPPGGPONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNOOONNNOONNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPFFPPFFGFFPFPONNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOOOONNONNNNONNNNONOONOONNOOOONNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOPPPPPFPPFFGPPPPGIPPPPFFFCNNNNNNNNNNNNNNNNNNNHCHNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOHHOONCNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHFFFNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNCNNNONNNNHNNNNNNNNNNNNONNNNNNHHHFFFCNNNNNNNNNNHHHHNNNNNNNNNNNONNNNNNNNNNNNNOONNNNONNNNNNNNNNNNNNNNNNNNNFNNNNNOHNNNNNNNOOOHHNNNNNPFGPPPNNNNNNNNNNNNNNONOONNNNNNPPPPPPGIPPPFFNNNNFFFNNNNNNNNNNOONNNNNNNNNNNNNNNNONNNNNNNNNNONHHNNNNNNNNNNNNNNNNHHFFFNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNONNNCNNOONNNNONNNNNNNNNNNNNNNHHFFFNNNNNNFNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNFFNNNNNNNNNNONNNNNNNNNNNNNNNNONNOOOOOOONNNNNNNNNNNNOPPFFGPPNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOFOONNNNNNNNONNNNNNNNNNONNNNNNONNNNONFFKFFPKFFFPFFFFKFKIFGPFOCOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNMNNNNOOOONNNNNNNNNNNNNNNNNNMNNNNOOONNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNMNNCONNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNOOOOOONNOOOOOOOOOOOOOOCMNNNNCMNNNNMNNNNMNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFFOOOONNOOOONNOOOONNNNFHONNHNNNNNNNHNNNOHHHNNNNNOFNOOONOONOOOONNFOOOOOOOONNOONONN","n":["ActivationFunction","Backpropagation","Batch","BatchBackprop","CascadeConfig","CascadeError","CascadeNetwork","CascadeTrainer","Connection","ErrorCategory","IncrementalBackprop","Layer","Network","NetworkBuilder","NetworkError","Neuron","ParallelTrainingOptions","QuickProp","RProp","RuvFannError","TrainingAlgorithm","TrainingAlgorithmTrait","TrainingData","TrainingError","TrainingState","ValidationError","activation","borrow","borrow_mut","cascade","cascade_error","clone","clone_into","clone_to_uninit","connection","deref","deref_mut","drop","eq","errors","fmt","from","init","integration","into","io","layer","mock_types","network","network_error","neuron","to_owned","training","training_error","try_from","try_into","type_id","vzip","ActivationFunction","Cos","CosSymmetric","Elliot","ElliotSymmetric","Gaussian","GaussianSymmetric","Linear","LinearPiece","LinearPieceSymmetric","ReLU","ReLULeaky","Sigmoid","SigmoidSymmetric","Sin","SinSymmetric","Tanh","Threshold","ThresholdSymmetric","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","fmt","from","hash","init","into","is_trainable","name","output_range","serialize","to_owned","try_from","try_into","type_id","vzip","CandidateGeneration","CandidateNeuron","CandidateTraining","CascadeBuilder","CascadeConfig","CascadeError","CascadeMetrics","CascadeNetwork","CascadeState","CascadeTrainer","CascadeTrainingRecord","CascadeTrainingResult","ConvergenceFailure","CorrelationCalculation","InvalidConfiguration","NoSuitableCandidate","OutputTraining","TopologyModification","activation","activation_derivative","best_candidate_correlation","best_correlation","best_error","bias","bias_gradient","bias_momentum","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","build","calculate_candidate_correlation_with_data","calculate_candidate_input_size","calculate_correlation","calculate_output","calculate_output_error","calculate_residuals","candidate_activations","candidate_learning_rate","","candidate_max_epochs","candidate_target_correlation","candidate_training_epochs","candidate_training_time","candidate_weight_range","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","config","","","convergence_reason","","correlation","correlation_calculation_time","current_epoch","current_error","default","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","determine_convergence_reason","drop","","","","","","","","","","extract_candidate_input","final_error","final_network","final_output_error","fmt","","","","","","","","","from","","","","","","","","","","generate_candidates","hidden_count","hidden_neuron_index","hidden_neurons_added","","init","","","","","","","","","","install_candidate","into","","","","","","","","","","max_hidden_neurons","","memory_usage_mb","metrics","","min_correlation_improvement","momentum","network","","network_modification_time","new","","","","num_candidates","","output","output_learning_rate","","output_max_epochs","output_target_error","output_training_epochs","output_training_time","parallel_candidates","","patience","peak_memory_usage_mb","pearson_correlation","random_seed","","rng","selected_activation","state","steepness","target_error","to_owned","","","","","","","to_string","total_backward_passes","total_forward_passes","total_training_time","train","train_candidate_epoch","train_candidates","train_candidates_parallel","train_candidates_sequential","train_output_epoch","train_output_weights","train_single_candidate","train_single_candidate_parallel","train_single_candidate_with_data","training_data","training_history","","","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","update_candidate_weights_simple","update_output_weights","update_weights","use_momentum","use_weight_decay","validate_config","validate_training_data","verbose","","vzip","","","","","","","","","","weight_decay","weight_gradients","weight_momentum","weights","Connection","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","from","from_neuron","init","into","new","serialize","set_weight","to_neuron","to_owned","try_from","try_into","type_id","update_weight","vzip","weight","Abort","Activation","Algorithm","CandidateGeneration","CandidateSelection","CandidateTraining","Cascade","","CascadeErrorCategory","CascadeParams","Compatibility","","Connections","Convergence","CorrelationCalculation","DataFormat","DataIo","Err","ErrorCategory","ErrorContext","ErrorLogger","Fallback","FileAccess","Format","Gradients","IncompatibleParams","InputData","InvalidConfig","Io","","IoErrorCategory","Iteration","Layers","LearningRate","Memory","","MissingParameter","Network","","NetworkConfig","NetworkErrorCategory","NetworkIo","Ok","OutOfRange","OutputData","OutputTraining","Parallel","","Performance","","Propagation","RecoveryContext","RecoveryStrategy","Reset","Retry","RetryWithModification","RuvFannError","RuvFannResult","Serialization","Skip","StopCriteria","Topology","TopologyModification","Training","","TrainingErrorCategory","TrainingParams","Validation","","ValidationError","ValidationErrorCategory","Weights","additional_info","borrow","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","checkpoints","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","current_retry","default","deref","","","","","","","","","","","","deref_mut","","","","","","","","","","","","drop","","","","","","","","","","","","epoch","eq","","","","","","fallback_available","fmt","","","","","","","","","","","","","from","","","","","","","","","","","","","","increment_retry","init","","","","","","","","","","","","into","","","","","","","","","","","","layer_index","log_error","log_level","log_simple_error","log_structured_error","max_retries","network_id","neuron_index","new","","","operation","performance_tracking","reset_retry_count","should_retry","source","strategy","structured_logging","timestamp","to_owned","","","","","","","","to_string","","try_from","","","","","","","","","","","","try_into","","","","","","","","","","","","type_id","","","","","","","","","","","","vzip","","","","","","","","","","","","with_epoch","with_info","with_layer","with_level","with_network_id","with_neuron","with_performance_tracking","with_structured_logging","actual","available_bytes","category","","","","","context","","","","details","fann_version","message","","","","","","","","","metric","operation","requested_bytes","source","thread_count","threshold","max","message","","","min","parameter","","value","AgentCompatibility","BenchmarkResult","CompatibilityTest","CrossAgentValidation","FannCompatibility","FannCompatibilityValidator","IntegrationConfig","IntegrationError","IntegrationResult","IntegrationTestSuite","PerformanceRegression","RegressionDetector","TestFailed","accuracy","add_baseline","add_test","api_coverage","baseline_duration","baseline_metrics","","benchmarks","borrow","","","","","","","","borrow_mut","","","","","","","","calculate_scores","check_regression","clone","","","clone_into","","","clone_to_uninit","","","compatibility_score","compatibility_tests","config","default","deref","","","","","","","","deref_mut","","","","","","","","drop","","","","","","","","duration","errors","fmt","","","","","from","","","","","","","","generate_test_datasets","generate_test_networks","init","","","","","","","","into","","","","","","","","load_baseline_metrics","max_test_duration","memory_mb","memory_usage_mb","name","new","","","performance_ratio","performance_score","performance_threshold","phantom","","random_seed","run_all_tests","run_basic_network_test","run_benchmarks","run_cascade_integration_test","run_compatibility_tests","run_performance_benchmarks","run_stress_tests","","run_training_integration_test","test_basic_network_functionality","test_cascade_correlation_integration","test_cross_agent_compatibility","test_datasets","test_fann_compatibility","","test_fn","test_io_system_integration","test_networks","test_parallel","test_parallel_execution","test_training_algorithm_integration","tests_failed","tests_passed","threshold_percent","throughput","to_owned","","","to_string","total_duration","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","verbose","vzip","","","","","","","","warnings","Binary","CompressedBinary","CompressedFann","CompressionError","Dot","DotExporter","Err","Fann","FannReader","FannWriter","FileFormat","InvalidFileFormat","InvalidNetwork","InvalidTrainingData","Io","IoError","IoResult","Json","Ok","ParseError","SerializationError","TrainingDataReader","TrainingDataStreamReader","TrainingDataWriter","binary","borrow","","","","","","","","borrow_mut","","","","","","","","clone","clone_into","clone_to_uninit","compress_data","compression","decompress_data","default","","","","","","deref","","","","","","","","deref_mut","","","","","","","","dot_export","drop","","","","","","","","eq","error","fann_format","fmt","","","from","","","","","","","","","","","","","init","","","","","","","","into","","","","","","","","json","layout_direction","read_binary","read_json","show_indices","show_weights","source","streaming","to_owned","to_string","training_data","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","vzip","","","","","","","","write_binary","write_json","BinaryConfig","BinaryReader","BinaryWriter","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","compact","config","","default","","","deref","","","deref_mut","","","drop","","","fast","fmt","from","","","init","","","inspect","into","","","little_endian","new","","","read","read_binary","read_with_limit","serialized_size","to_owned","try_from","","","try_into","","","type_id","","","varint_encoding","vzip","","","with_config","","write","write_binary","serialized_size","validate_serializable","CompressedReader","CompressedWriter","CompressionConfig","analyze","best","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","compress_bytes","compress_data","decompress_bytes","decompress_data","default","deref","","","deref_mut","","","drop","","","fast","","finish","flush","fmt","from","","","get_mut","","get_ref","","init","","","inner","","into","","","into_inner","level","new","","","read","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_config","with_level","","write","CompressionStats","borrow","borrow_mut","clone","clone_into","clone_to_uninit","compressed_size","compression_ratio","deref","deref_mut","drop","fmt","from","init","into","original_size","ratio","savings_percent","space_savings","test_compression","to_owned","try_from","try_into","type_id","vzip","BottomToTop","DotExporter","LayoutDirection","LeftToRight","RightToLeft","TopToBottom","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","export_network","fmt","from","init","into","layout_direction","new","show_indices","show_weights","to_owned","try_from","try_into","type_id","vzip","with_options","CompressionError","Err","InvalidFileFormat","InvalidNetwork","InvalidTrainingData","Io","IoError","IoResult","Ok","ParseError","SerializationError","FannReader","FannWriter","new","","read_network","write_network","JsonConfig","JsonReader","JsonWriter","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","compact","config","","default","","","deref","","","deref_mut","","","drop","","","fmt","from","","","include_null","init","","","into","","","new","","","pretty","","read","read_json","read_json_with_options","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_config","","write","write_json","write_json_with_options","BufferedStreamReader","StreamStats","TrainingDataStreamReader","avg_bytes_per_sample","borrow","","","borrow_mut","","","buffer_len","buffer_size","","","bytes_read","clone","clone_into","clone_to_uninit","consume","default","deref","","","deref_mut","","","drop","","","fill_buf","fmt","from","","","init","","","inner","into","","","memory","new","","num_input","num_output","parameters_per_sample","read","read_batches","read_stream","samples_processed","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_buffer_size","with_capacity","estimate_batch_memory","optimal_batch_size","TrainingDataReader","TrainingDataStreamReader","TrainingDataWriter","new","","","read_data","read_stream","write_data","Layer","bias_neuron","bias_neuron_mut","borrow","borrow_mut","calculate","clone","clone_into","clone_to_uninit","connect_to","deref","deref_mut","deserialize","drop","eq","fmt","from","get_outputs","has_bias","init","into","neurons","new","num_regular_neurons","reset","serialize","set_activation_function","set_activation_steepness","set_inputs","size","to_owned","try_from","try_into","type_id","vzip","with_bias","MockNetwork","MockTrainingData","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","connection_rate","deref","","deref_mut","","deserialize","","drop","","eq","","fmt","","from","","init","","inputs","into","","layer_sizes","learning_rate","num_data","num_input","num_layers","num_output","outputs","serialize","","to_owned","","try_from","","try_into","","type_id","","vzip","","weights","InputSizeMismatch","InvalidLayerConfiguration","Network","NetworkBuilder","NetworkError","NoLayers","WeightCountMismatch","borrow","","","borrow_mut","","","build","clone","clone_into","clone_to_uninit","connection_rate","","","default","deref","","","deref_mut","","","deserialize","drop","","","fmt","","","from","","","from_bytes","get_total_connections","get_weights","hidden_layer","hidden_layer_with_activation","init","","","input_layer","into","","","layers","","layers_from_sizes","new","","num_inputs","num_layers","num_outputs","output_layer","output_layer_with_activation","randomize_weights","reset","run","run_batch","serialize","set_activation_function","set_activation_function_hidden","set_activation_function_output","set_activation_steepness_hidden","set_activation_steepness_output","set_training_algorithm","set_weights","to_bytes","to_owned","to_string","total_connections","total_neurons","train","try_from","","","try_into","","","type_id","","","vzip","","","actual","","expected","","Neuron","activation_function","activation_steepness","add_connection","borrow","borrow_mut","calculate","clear_connections","clone","clone_into","clone_to_uninit","connections","deref","deref_mut","deserialize","drop","eq","fmt","from","get_connection_weight","init","into","is_bias","new","new_bias","reset","serialize","set_connection_weight","set_value","sum","to_owned","try_from","try_into","type_id","value","vzip","BatchBackprop","BitFailStopCriteria","ErrorFunction","ExponentialDecay","IncrementalBackprop","InvalidData","LearningRateSchedule","MaeError","MseError","MseStopCriteria","NetworkError","ParallelTrainingOptions","Quickprop","Rprop","StepDecay","StopCriteria","TanhError","TrainingAlgorithm","TrainingCallback","TrainingData","TrainingError","TrainingFailed","TrainingState","algorithm_specific","backprop","batch_size","best_error","bias_step_sizes","bit_fail_limit","borrow","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","calculate","","","","calculate_error","","","","","call_callback","","","","","callback","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","count_bit_fails","","","","","decay","decay_rate","decrease_factor","default","","","delta_max","delta_min","delta_zero","deref","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","derivative","","","","drop","","","","","","","","","","","","","","","drop_rate","epoch","epochs_per_drop","error_function","","","","fmt","","","","","from","","","","","","","","","","","","","","","get_rate","","","helpers","increase_factor","init","","","","","","","","","","","","","","","initial_rate","","inputs","into","","","","","","","","","","","","","","","learning_rate","","","momentum","","mu","new","","num_threads","outputs","parallel_error_calc","parallel_gradients","previous_bias_deltas","","","previous_bias_gradients","","previous_weight_deltas","","","previous_weight_gradients","","quickprop","restore_state","","","","","rprop","save_state","","","","","set_callback","","","","","should_stop","","","target_bit_fail","target_error","to_owned","","","","","","to_string","train_epoch","","","","","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","weight_step_sizes","BatchBackprop","IncrementalBackprop","callback","","error_function","","initialize_deltas","","learning_rate","","momentum","","new","","previous_bias_deltas","","previous_weight_deltas","","with_error_function","","with_momentum","","SimpleNetwork","apply_updates_to_network","biases","borrow","borrow_mut","calculate_gradients","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","forward_propagate","from","init","into","layer_sizes","network_to_simple","sigmoid","sigmoid_derivative","to_owned","try_from","try_into","type_id","vzip","weights","Quickprop","calculate_quickprop_delta","callback","decay","error_function","initialize_state","learning_rate","mu","new","previous_bias_deltas","previous_bias_gradients","previous_weight_deltas","previous_weight_gradients","with_error_function","with_parameters","Rprop","bias_step_sizes","callback","decrease_factor","delta_max","delta_min","delta_zero","error_function","increase_factor","initialize_state","new","previous_bias_gradients","previous_weight_gradients","update_step_size","weight_step_sizes","with_error_function","with_parameters"],"q":[[0,"ruv_fann"],[58,"ruv_fann::activation"],[102,"ruv_fann::cascade"],[390,"ruv_fann::connection"],[417,"ruv_fann::errors"],[722,"ruv_fann::errors::RuvFannError"],[750,"ruv_fann::errors::ValidationError"],[758,"ruv_fann::integration"],[945,"ruv_fann::io"],[1103,"ruv_fann::io::binary"],[1168,"ruv_fann::io::binary::inspect"],[1170,"ruv_fann::io::compression"],[1241,"ruv_fann::io::compression::analyze"],[1266,"ruv_fann::io::dot_export"],[1281,"ruv_fann::io"],[1282,"ruv_fann::io::dot_export"],[1286,"ruv_fann::io"],[1290,"ruv_fann::io::dot_export"],[1295,"ruv_fann::io"],[1302,"ruv_fann::io::error"],[1304,"ruv_fann::io"],[1307,"ruv_fann::io::fann_format"],[1309,"ruv_fann::io"],[1313,"ruv_fann::io::json"],[1377,"ruv_fann::io::streaming"],[1443,"ruv_fann::io::streaming::memory"],[1445,"ruv_fann::io::training_data"],[1448,"ruv_fann::io"],[1454,"ruv_fann::layer"],[1490,"ruv_fann::mock_types"],[1542,"ruv_fann::network"],[1631,"ruv_fann::network::NetworkError"],[1635,"ruv_fann::neuron"],[1671,"ruv_fann::training"],[2011,"ruv_fann::training::backprop"],[2013,"ruv_fann::training"],[2033,"ruv_fann::training::helpers"],[2060,"ruv_fann::training::quickprop"],[2061,"ruv_fann::training"],[2075,"ruv_fann::training::rprop"],[2076,"ruv_fann::training"],[2092,"core::fmt"],[2093,"core::result"],[2094,"core::any"],[2095,"serde::de"],[2096,"core::hash"],[2097,"serde::ser"],[2098,"num_traits::float"],[2099,"core::marker"],[2100,"alloc::vec"],[2101,"core::time"],[2102,"core::clone"],[2103,"alloc::string"],[2104,"core::option"],[2105,"rand::rngs::std"],[2106,"core::cmp"],[2107,"std::collections::hash::map"],[2108,"log"],[2109,"core::convert"],[2110,"core::error"],[2111,"std::time"],[2112,"core::ops::function"],[2113,"core::default"],[2114,"alloc::boxed"],[2115,"std::io"],[2116,"core::num::error"],[2117,"core::num::dec2flt"],[2118,"bincode::error"],[2119,"serde_json::error"],[2120,"std::io::error"],[2121,"flate2::gz::read"],[2122,"flate2::gz::write"],[2123,"core::str::traits"],[2124,"std::io::buffered::bufreader"],[2125,"rand::distributions::uniform"],[2126,"core::ops::arith"]],"i":"`f00``````0``````00````````00``000`0000`000`0``````0``0000`Ah000000000000000000000000000000000000000000Dl`0`````````000000Bd0BhBjBl3330Bn5Dd3C`65D`Dh549362871045558552422271236287103628710362871054370815646215493628710549362871055493628710500799362871054936287105576054936287105549362871042150225315438428422271422154257384362871091115555555555558054936287105493628710549362871055822554254936287102888`Eh0000000000000000000000000GbFfFhFj00CfG``Fl21543GfFnADj```911723254`787542543`1023654548``999``1978654`354``8F`Gd7:9853641;Fd18;:964752<00;:96472<;:96472<;:96472<0118;:964752<018;:964752<018;:964752<02;:9647088;:9647552<01888;:964752<0018;:964752<018;:964752<02111102212021008012;:96472<8518;:964752<018;:964752<018;:964752<018;:964752<022212211HdHfHhHjHlHnI`432Ib2Id654321780807218IfIhIjIl33In4Jh``00`````0`0J`JbJd02Jl2Jn12Kd46Kb2634157026350260260262430341570263415702634157026627702634157026333415702634157026306213456203103303433033333301330332256026723415702634157026341570260341570262Kj00Ln1`Kl2```1111``2011````LbLdLfLhLjLl7854321078888```5432105432107854321078`543210788``77854321077777785432107854321078`0``007`87`54321078543210785432107854321078`````MnN`Ml21000002121021021021000210210`21002102`2102102102100210211```````NbNhNd2102222````21021021022200210210101021010212102121021021021020020`O`00000`0000000000``00000Mj``000000000000800008888000008?>????``>??``=<=<```OjOlOh21000002121021021021002100210210210002``0210210210210211`````OnA@bA@`21020010222201102102102021021020102`102220112210210210210210`````LfLhLj201`A@n0000000000000000000000000000000000``ObA@l101010101101010101010101001011001001010101010101Gj0```00AAb1Cd1201000110112012001202201200001112011201011000011000000000000002000120120120120AB`ABb10`AA`0000000000000000000000000000000000`````Gh````0``````````0`ABd`ABf1ABhABjAClACnADf3ACfACh6ACjCb9;ABnAC`ACb=987:65;43<>210=ABl321ACd87=6087=687=65>432?5>432?5>432?087=66;==6>===;:9<87=65>Gh543ABd=<;>:9?87ABf276514765>=<?;:ABh:9138762>2><;0:91332?>=ABj=<1;:249873AD`AClACn`410ADf4ACfACh7ACjCb:<ABnAC`ACb>983987;65<43=?210>65465498=3==654<4654<4`ACd76=5`076=5076=5ADd9==95?432ABdGh3:9ABh9>=<ABj<;1:9ABf39874AClACnADf4ACfACh7ACjCb7:ABnAC`ACb>987;65<43:=210>987;65<43:=210><``65656565656565656565``ADh00`0000000`0000```000000`55555555555555`================","f":"```````````````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}``{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}`{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{f}}{b{f}}}n}`{{{b{f}}{b{dA`}}}Ab}{cc{}}{{}l}`{{}c{}}``````{bc{}}``{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}```````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ah}}}Ah}{{b{b{dc}}}h{}}{{bj}h}{{}Ah}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{Ah}}}Aj}{lh}{{{b{Ah}}{b{Ah}}}n}{{{b{Ah}}{b{dA`}}}Ab}{cc{}}{{{b{Ah}}{b{dc}}}hAl}{{}l}{{}c{}}{{{b{Ah}}}n}{{{b{Ah}}}{{b{An}}}}{{{b{Ah}}}{{B`{{b{An}}{b{An}}}}}}{{{b{Ah}}c}AdBb}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}``````````````````{BdAh}{{{b{{Bd{c}}}}c}cBf}{Bh}{Bj}{Bl}{Bd}00{b{{b{c}}}{}}000000000{{{b{d}}}{{b{dc}}}{}}000000000{{{Bn{c}}}{{C`{c}}}Bf}{{{b{{Bl{c}}}}{b{{Bd{c}}}}{b{{Cb{c}}}}{b{{Cd{c}}}}}{{Ad{cCf}}}{BfChCj}}{{{b{{Bl{c}}}}}lBf}{{{b{d{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cn{{Cl{c}}}}}}}{{Ad{cCf}}}Bf}{{{b{{Bd{c}}}}{b{{Cn{c}}}}}cBf}{{{b{{Bl{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{d{Bl{c}}}}}{{Ad{{Cl{{Cl{c}}}}Cf}}}Bf}{C`Cl}{{{Bn{c}}c}{{Bn{c}}}Bf}{C`}{C`l}1{Bhl}{D`Db}{C`B`}{{{b{{Dd{c}}}}}{{Dd{c}}}{DfBf}}{{{b{{Bj{c}}}}}{{Bj{c}}}{DfBf}}{{{b{{C`{c}}}}}{{C`{c}}}{DfBf}}{{{b{{Bd{c}}}}}{{Bd{c}}}{DfBf}}{{{b{{Bh{c}}}}}{{Bh{c}}}{DfBf}}{{{b{D`}}}D`}{{{b{{Dh{c}}}}}{{Dh{c}}}{DfBf}}{{b{b{dc}}}h{}}000000{{bj}h}000000{BlC`}{BnC`}{DdC`}{BhDj}{DhDj}{Bd}{D`Db}{Bll}{Bj}{{}{{Bn{c}}}Bf}{{}{{Bj{c}}}Bf}{{}{{C`{c}}}Bf}{{}D`}{l{{b{c}}}{}}000000000{l{{b{dc}}}{}}000000000{{{b{{Bl{c}}}}}DjBf}{lh}000000000{{{b{{Bl{c}}}}{b{{Cn{c}}}}}{{Cl{c}}}Bf}{Dh}{DhCd}{Bh}{{{b{Dl}}{b{dA`}}}Ab}0{{{b{{Dd{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{Bj{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{C`{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{Bd{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{Bh{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{D`}}{b{dA`}}}Ab}{{{b{{Dh{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}000000000{{{b{d{Bl{c}}}}}{{Ad{{Cl{{Bd{c}}}}Cf}}}Bf}{Bll}{Bhl}{Bjl}{Dhl}{{}l}000000000{{{b{d{Bl{c}}}}{Bd{c}}}{{Ad{hCf}}}Bf}{{}c{}}000000000{{{Bn{c}}l}{{Bn{c}}}Bf}{C`l}{D`E`}{BlD`}{DhD`}{C`}0{BlCd}{DdCd}{D`Db}{{{C`{c}}{Cd{c}}{Cb{c}}}{{Ad{{Bl{c}}Dl}}}Bf}{{}{{Bn{c}}}Bf}{{{Cd{c}}{C`{c}}}{{Dd{c}}}Bf}{{lAh{B`{cc}}{Ed{Eb}}}{{Bd{c}}}Bf}<;{Bd}{{{Bn{c}}c}{{Bn{c}}}Bf}9=9{Bhl}7{{{Bn{c}}n}{{Bn{c}}}Bf}{C`n}{C`l}{D`E`}{{{b{{Bl{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}}{{Ad{cCf}}}Bf}{{{Bn{c}}Eb}{{Bn{c}}}Bf}{C`Ed}{BlEf}{BhAh}{DdBj}<;{bc{}}000000{bDj}{D`l}0{D`Db}{{{b{d{Bl{c}}}}}{{Ad{{Dh{c}}Cf}}}Bf}{{{b{d{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cn{{Cl{c}}}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bl{c}}}}}{{Ad{{Bd{c}}Cf}}}Bf}{{{b{d{Bl{c}}}}{b{d{Cn{{Bd{c}}}}}}}{{Ad{hCf}}}{BfChCj}}{{{b{d{Bl{c}}}}{b{d{Cn{{Bd{c}}}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bl{c}}}}}{{Ad{cCf}}}Bf}{{{b{d{Bl{c}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bl{c}}}}{b{d{Bd{c}}}}}{{Ad{hCf}}}Bf}{{{b{{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cb{c}}}}{b{{C`{c}}}}}{{Ad{hCf}}}Bf}{{{b{{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cb{c}}}}{b{{C`{c}}}}{b{{Cd{c}}}}}{{Ad{hCf}}}{BfChCj}}{BlCb}{BlCl}{BdCl}{DhCl}{c{{Ad{e}}}{}{}}000000000{{}{{Ad{c}}}{}}000000000{bAf}000000000{{{b{{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cb{c}}}}{b{{Cd{c}}}}c}{{Ad{hCf}}}{BfChCj}}{{{b{d{Bl{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bd{c}}}}cnc}hBf}{C`n}0{{{b{{C`{c}}}}}{{Ad{hDl}}}Bf}{{{b{{Cb{c}}}}{b{{Cd{c}}}}}{{Ad{hDl}}}Bf}{{{Bn{c}}n}{{Bn{c}}}Bf}3{{}c{}}000000000{C`}===`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Eh{c}}}}}{{Eh{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{{Eh{e}}}}}Aj{EjBf}}{lh}{{{b{{Eh{c}}}}{b{{Eh{c}}}}}n{ElBf}}{{{b{{Eh{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}{Ehl}{{}l}{{}c{}}{{llc}{{Eh{c}}}Bf}{{{b{{Eh{c}}}}e}Ad{EnBf}Bb}{{{b{d{Eh{c}}}}c}hBf}5{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}4{{}c{}}{Eh}````````````````````````````````````````````````````````````````````````{F`Fb}{b{{b{c}}}{}}00000000000{{{b{d}}}{{b{dc}}}{}}00000000000{FdCl}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{F`}}}F`}{{{b{Gb}}}Gb}{{b{b{dc}}}h{}}0000000{{bj}h}0000000{Fdl}{{}Gd}{l{{b{c}}}{}}00000000000{l{{b{dc}}}{}}00000000000{lh}00000000000{F`Ed}{{{b{Ff}}{b{Ff}}}n}{{{b{Fh}}{b{Fh}}}n}{{{b{Fj}}{b{Fj}}}n}{{{b{Fl}}{b{Fl}}}n}{{{b{Fn}}{b{Fn}}}n}{{{b{G`}}{b{G`}}}n}{Fdn}{{{b{Cf}}{b{dA`}}}Ab}0{{{b{Ff}}{b{dA`}}}Ab}{{{b{Fh}}{b{dA`}}}Ab}{{{b{Fj}}{b{dA`}}}Ab}{{{b{Fl}}{b{dA`}}}Ab}{{{b{Fn}}{b{dA`}}}Ab}{{{b{G`}}{b{dA`}}}Ab}{{{b{Gf}}{b{dA`}}}Ab}0{{{b{F`}}{b{dA`}}}Ab}{{{b{Gb}}{b{dA`}}}Ab}{{{b{Fd}}{b{dA`}}}Ab}{cc{}}0{GhCf}{GjCf}2222222222{{{b{dFd}}}h}{{}l}00000000000{{}c{}}00000000000{F`Ed}{{{b{Gd}}{b{Cf}}{Ed{{b{F`}}}}}h}{GdGl}11{Fdl}33{{}Gd}{cF`{{Gn{Dj}}}}{GbFd}{F`Dj}{Gdn};{{{b{Fd}}}n}{{{b{Cf}}}{{Ed{{b{H`}}}}}}{FdGb}3{F`Hb}{bc{}}0000000{bDj}0{c{{Ad{e}}}{}{}}00000000000{{}{{Ad{c}}}{}}00000000000{bAf}00000000000{{}c{}}00000000000{{F`l}F`}{{F`ce}F`{{Gn{Dj}}}{{Gn{Dj}}}}1{{GdGl}Gd}{{F`c}F`{{Gn{Dj}}}}3{{Gdn}Gd}0{HdE`}{HfEd}{HhFf}{HjFh}{HlFj}{HnFl}{I`Fn}{HhEd}{HjEd}{HlEd}{IbEd}{HnCl}{IdEd}{HhDj}{HjDj}{HlDj}{HnDj}{I`Dj}{IbDj}{HfDj}{HdDj}{IdDj}10{HfEd}{I`Ed}{Ibl}{HdE`}{IfE`}{IhDj}{IjDj}{IlDj}3{IfDj}{InDj}5`````````````{J`E`}{{{b{dJb}}DjE`}h}{{{b{d{Jd{c}}}}Dje}hBf{{Jj{}{{Jf{{Ad{hJh}}}}}}}}{JdFb}{J`Ed}{JlEd}{JbFb}{JnFb}{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{{Jl{c}}}}{b{dJn}}}{{Ad{hJh}}}{BfChK`}}{{{b{Jb}}{b{An}}E`}{{Ed{E`}}}}{{{b{Kb}}}Kb}{{{b{Jn}}}Jn}{{{b{J`}}}J`}{{b{b{dc}}}h{}}00{{bj}h}00{JnE`}{JdCl}{JlKb}{{}Kb}{l{{b{c}}}{}}0000000{l{{b{dc}}}{}}0000000{lh}0000000{J`Db}{JnCl}{{{b{Jh}}{b{dA`}}}Ab}0{{{b{Kb}}{b{dA`}}}Ab}{{{b{Jn}}{b{dA`}}}Ab}{{{b{J`}}{b{dA`}}}Ab}{cc{}}0000000{{{b{d{Jl{c}}}}}{{Ad{hJh}}}{BfChK`}}0{{}l}0000000{{}c{}}0000000{{{b{d{Jl{c}}}}{b{An}}}{{Ad{hJh}}}{BfChK`}}{KbDb}{J`E`}{JnE`}{KdDj}{Kb{{Jl{c}}}{BfChK`}}{{}{{Jd{c}}}Bf}{E`Jb}{J`Ed}5{KbE`}{JlKf}{KdKf}{KbEd}{{{b{d{Jl{c}}}}}{{Ad{JnJh}}}{BfChK`}}{{{b{{Jl{c}}}}{b{d{Cd{c}}}}}{{Ad{J`Jh}}}{BfChK`}}{Kbn}{{{b{{Jl{c}}}}{Cd{c}}{Cb{c}}}{{Ad{J`Jh}}}{BfChK`}}{{{b{{Jd{c}}}}}{{Ad{E`Jh}}}Bf}{{{b{{Jl{c}}}}{b{dJn}}}{{Ad{hJh}}}{BfChK`}}032000{JlCl}14{KdKh}21522{Jnl}0{JbE`}{J`E`}{bc{}}00{bDj}{JnDb}{c{{Ad{e}}}{}{}}0000000{{}{{Ad{c}}}{}}0000000{bAf}0000000>{{}c{}}0000000{JnCl}`````````````````````````{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{Kj}}}Kj}{{b{b{dc}}}h{}}{{bj}h}{{{b{dc}}{b{de}}}{{Kl{h}}}KnL`}`0{{}Lb}{{}Ld}{{}Lf}{{}Lh}{{}Lj}{{}Ll}{l{{b{c}}}{}}0000000{l{{b{dc}}}{}}0000000`{lh}0000000{{{b{Kj}}{b{Kj}}}n}``{{{b{Ln}}{b{dA`}}}Ab}0{{{b{Kj}}{b{dA`}}}Ab}{cc{}}000000{M`Ln}{MbLn}{MdLn}{MfLn}{MhLn}5{{}l}0000000{{}c{}}0000000`{LlMj}{{{b{dc}}}{{Kl{e}}}KnEj}0{Lln}0{{{b{Ln}}}{{Ed{{b{H`}}}}}}`{bc{}}{bDj}`{c{{Ad{e}}}{}{}}0000000{{}{{Ad{c}}}{}}0000000{bAf}0000000{{}c{}}0000000{{{b{c}}{b{de}}}{{Kl{h}}}EnL`}0```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Ml}}}Ml}{{b{b{dc}}}h{}}{{bj}h}{{}Ml}{MnMl}{N`Ml}{{}Mn}{{}N`}4{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}007{{{b{Ml}}{b{dA`}}}Ab}{cc{}}00{{}l}00`{{}c{}}00{Mln}98<{{{b{Mn}}{b{dc}}}{{Kl{e}}}KnEj}{{{b{dc}}}{{Kl{e}}}KnEj}{{{b{Mn}}{b{dc}}Eb}{{Kl{e}}}KnEj}{{{b{N`}}{b{c}}}{{Kl{Eb}}}En}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}008{{}c{}}00{MlMn}{MlN`}{{{b{N`}}{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}}{{Kl{Eb}}}En}{{{b{c}}}{{Kl{h}}}En}````{{}Nb}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Nb}}}Nb}{{b{b{dc}}}h{}}{{bj}h}{{{b{{Cn{j}}}}}{{Kl{{Cl{j}}}}}}{{{b{dc}}{b{de}}}{{Kl{h}}}KnL`}107{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}00:{Nbn}{{{Nd{c}}}{{Nf{c}}}L`}{{{b{d{Nd{c}}}}}{{Nf{h}}}L`}{{{b{Nb}}{b{dA`}}}Ab}{cc{}}00{{{b{d{Nh{c}}}}}{{b{d{Nj{c}}}}}Kn}{{{b{d{Nd{c}}}}}{{b{dc}}}L`}{{{b{{Nh{c}}}}}{{b{{Nj{c}}}}}Kn}{{{b{{Nd{c}}}}}{{b{c}}}L`}{{}l}00{NhNj}{NdNl}{{}c{}}00{{{Nh{c}}}{{Nj{c}}}Kn}{NbNn}{c{{Nh{c}}}Kn}{c{{Nd{c}}}L`}{{}Nb}{{{b{d{Nh{c}}}}{b{d{Cn{j}}}}}{{Nf{l}}}Kn}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{{cNb}{{Nd{c}}}L`}{{cNn}{{Nd{c}}}L`}{NnNb}{{{b{d{Nd{c}}}}{b{{Cn{j}}}}}{{Nf{l}}}L`}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{O`}}}O`}{{b{b{dc}}}h{}}{{bj}h}{O`l}{{ll}E`}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{O`}}{b{dA`}}}Ab}{cc{}}{{}l}{{}c{}}8{O`E`}08{{{b{{Cn{j}}}}}{{Kl{O`}}}}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}``````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Mj}}}Mj}{{b{b{dc}}}h{}}{{bj}h}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{Mj}}{b{Mj}}}n}{{{b{Ll}}{b{Ob}}{b{dc}}}{{Kl{h}}}L`}{{{b{Mj}}{b{dA`}}}Ab}{cc{}}{{}l}{{}c{}}{LlMj}{{}Ll}{Lln}0{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}{{nnMj}Ll}`````````````{{}Lb}{{}Ld}{{{b{Lb}}{b{dc}}}{{Kl{{Cd{e}}}}}Kn{BfOd}}{{{b{Ld}}{b{{Cd{c}}}}{b{de}}}{{Kl{h}}}{BfOf}L`}```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Oh}}}Oh}{{b{b{dc}}}h{}}{{bj}h}{{}Oh}{OjOh}{OlOh}{{}Oj}{{}Ol}4{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}00{{{b{Oh}}{b{dA`}}}Ab}{cc{}}00{Ohn}{{}l}00{{}c{}}0098<<2{{{b{Oj}}{b{dc}}}{{Kl{e}}}KnEj}{{{b{dc}}}{{Kl{e}}}KnEj}{{{b{dc}}n}{{Kl{e}}}KnEj}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{OhOj}{OhOl}{{{b{Ol}}{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}{b{de}}n}{{Kl{h}}}EnL`}```{{{b{On}}}E`}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{{A@`{c}}}}}lKn}0{A@bl}{A@`l}{Onl}{{{b{On}}}On}{{b{b{dc}}}h{}}{{bj}h}{{{b{d{A@`{c}}}}l}hKn}{{}A@b}{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}00{{{b{d{A@`{c}}}}}{{Nf{{b{{Cn{j}}}}}}}Kn}{{{b{On}}{b{dA`}}}Ab}{cc{}}00{{}l}00{A@`A@d}{{}c{}}00`9{c{{A@`{c}}}Kn}??{{{b{On}}}l}{{{b{d{A@`{c}}}}{b{d{Cn{j}}}}}{{Nf{l}}}Kn}{{{b{A@b}}{b{dc}}le}{{Kl{On}}}A@f{{A@j{{b{{Cn{{Cl{A@h}}}}}}{b{{Cn{{Cl{A@h}}}}}}}{{Jf{{Kl{h}}}}}}}}{{{b{A@b}}{b{dc}}e}{{Kl{On}}}A@f{{A@j{{b{{Cn{A@h}}}}{b{{Cn{A@h}}}}}{{Jf{{Kl{h}}}}}}}}{Onl}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{lA@b}{{cl}{{A@`{c}}}Kn}{{lll}l}0```{{}Lf}{{}Lh}{{}Lj}{{{b{Lf}}{b{dc}}}{{Kl{A@l}}}Kn}{{{b{Lj}}{b{dc}}e}{{Kl{h}}}A@f{{A@j{{b{{Cn{A@h}}}}{b{{Cn{A@h}}}}}{{Jf{{Kl{h}}}}}}}}{{{b{Lh}}{b{A@l}}{b{dc}}}{{Kl{h}}}L`}`{{{b{{A@n{c}}}}}{{Ed{{b{{AA`{c}}}}}}}Bf}{{{b{d{A@n{c}}}}}{{Ed{{b{d{AA`{c}}}}}}}Bf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{d{A@n{c}}}}{b{{Cn{c}}}}}hBf}{{{b{{A@n{c}}}}}{{A@n{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{{{b{{A@n{c}}}}{b{d{A@n{c}}}}c}hBf}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{{A@n{e}}}}}Aj{EjBf}}{lh}{{{b{{A@n{c}}}}{b{{A@n{c}}}}}nBf}{{{b{{A@n{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}{{{b{{A@n{c}}}}}{{Cl{c}}}Bf}{{{b{{A@n{c}}}}}nBf}{{}l}{{}c{}}{A@nCl}{{lAhc}{{A@n{c}}}Bf}{{{b{{A@n{c}}}}}lBf}{{{b{d{A@n{c}}}}}hBf}{{{b{{A@n{c}}}}e}Ad{EnBf}Bb}{{{b{d{A@n{c}}}}Ah}hBf}{{{b{d{A@n{c}}}}c}hBf}{{{b{d{A@n{c}}}}{b{{Cn{c}}}}}{{Ad{h{b{An}}}}}Bf}5{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}};``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Ob}}}Ob}{{{b{A@l}}}A@l}{{b{b{dc}}}h{}}0{{bj}h}0{ObA@h}{l{{b{c}}}{}}0{l{{b{dc}}}{}}0{c{{Ad{Ob}}}Aj}{c{{Ad{A@l}}}Aj}{lh}0{{{b{Ob}}{b{Ob}}}n}{{{b{A@l}}{b{A@l}}}n}{{{b{Ob}}{b{dA`}}}Ab}{{{b{A@l}}{b{dA`}}}Ab}{cc{}}0{{}l}0{A@lCl}{{}c{}}0{ObCl}>{A@ll}0{Obl}14{{{b{Ob}}c}AdBb}{{{b{A@l}}c}AdBb}{bc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0{{}c{}}09```````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{AAb{c}}}{{Cd{c}}}Bf}{{{b{{Cd{c}}}}}{{Cd{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{{{AAb{c}}c}{{AAb{c}}}Bf}{AAb}{Cd}{{}{{AAb{c}}}Bf}{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{c{{Ad{{Cd{e}}}}}Aj{EjBf}}{lh}00{{{b{Gj}}{b{dA`}}}Ab}0{{{b{{Cd{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}00{{{b{{Cn{j}}}}}{{Ad{{Cd{c}}Gj}}}{AAdBf}}{{{b{{Cd{c}}}}}lBf}{{{b{{Cd{c}}}}}{{Cl{c}}}Bf}{{{AAb{c}}l}{{AAb{c}}}Bf}{{{AAb{c}}lAhc}{{AAb{c}}}Bf}{{}l}002{{}c{}}00{AAbCl}{CdCl}{{{AAb{c}}{b{{Cn{l}}}}}{{AAb{c}}}Bf}{{}{{AAb{c}}}Bf}{{{b{{Cn{l}}}}}{{Cd{c}}}Bf}:::87{{{b{d{Cd{c}}}}cc}h{AAfBf}}{{{b{d{Cd{c}}}}}hBf}{{{b{d{Cd{c}}}}{b{{Cn{c}}}}}{{Cl{c}}}Bf}{{{b{d{Cd{c}}}}{b{{Cn{{Cl{c}}}}}}}{{Cl{{Cl{c}}}}}Bf}{{{b{{Cd{c}}}}e}Ad{EnBf}Bb}{{{b{d{Cd{c}}}}lAh}hBf}{{{b{d{Cd{c}}}}Ah}hBf}0{{{b{d{Cd{c}}}}c}hBf}0{{{b{d{Cd{c}}}}f}hBf}{{{b{d{Cd{c}}}}{b{{Cn{c}}}}}{{Ad{hGj}}}Bf}{{{b{{Cd{c}}}}}{{Cl{j}}}{EnBf}}{bc{}}{bDj}{{{b{{Cd{c}}}}}lBf}0{{{b{d{Cd{c}}}}{b{{Cn{{Cl{c}}}}}}{b{{Cn{{Cl{c}}}}}}A@hl}{{Ad{hGj}}}{AAhAAjAAlAAnBf}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{AB`l}{ABbl}10`{AA`Ah}{AA`}{{{b{d{AA`{c}}}}lc}hBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{d{AA`{c}}}}{b{{Cn{c}}}}}hBf}{{{b{d{AA`{c}}}}}hBf}{{{b{{AA`{c}}}}}{{AA`{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{AA`Cl}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{{AA`{e}}}}}Aj{EjBf}}{lh}{{{b{{AA`{c}}}}{b{{AA`{c}}}}}nBf}{{{b{{AA`{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}{{{b{{AA`{c}}}}l}{{Ed{c}}}Bf}{{}l}{{}c{}}{AA`n}{{Ahc}{{AA`{c}}}Bf}{{}{{AA`{c}}}Bf}{{{b{d{AA`{c}}}}}hBf}{{{b{{AA`{c}}}}e}Ad{EnBf}Bb}{{{b{d{AA`{c}}}}lc}{{Ad{h{b{An}}}}}Bf}{{{b{d{AA`{c}}}}c}hBf}{AA`}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}4{{}c{}}```````````````````````{ABdFb}`{ABfl}{ABd}{ABhCl}{ABj}{b{{b{c}}}{}}00000000000000{{{b{d}}}{{b{dc}}}{}}00000000000000{{{b{ABl}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{ABn}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{AC`}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{ACb}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}}cBf}{{{b{{ACf{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfChK`}}{{{b{{ACh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfCh}}{{{b{{ABh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfCh}}{{{b{{ACj{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfCh}}{{{b{dACd}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}nBf}{{{b{d{ACf{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfChK`}}{{{b{d{ACh{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfCh}}{{{b{d{ABh{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfCh}}{{{b{d{ACj{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfCh}}{ACfEd}{AChEd}{ABhEd}{ACjEd}{{{b{{Cb{c}}}}}{{Cb{c}}}{DfBf}}{{{b{ABf}}}ABf}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{{ABd{c}}}}}{{ABd{c}}}{DfBf}}{{b{b{dc}}}h{}}00000{{bj}h}00000{{{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}lBf}{{{b{{ACf{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfChK`}}{{{b{{ACh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfCh}}{{{b{{ABh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfCh}}{{{b{{ACj{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfCh}}{ACj}{ACl}{ABh}{{}{{ABh{c}}}{BfCh}}{{}{{ACj{c}}}{BfCh}}{{}ABf}333{l{{b{c}}}{}}00000000000000{l{{b{dc}}}{}}00000000000000{{{b{ABl}}cc}cBf}{{{b{ABn}}cc}cBf}{{{b{AC`}}cc}cBf}{{{b{ACb}}cc}cBf}{lh}00000000000000{ACn}{ABdl}{ACnl}{ACfKh}{AChKh}{ABhKh}{ACjKh}{{{b{{Cb{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{ABf}}{b{dA`}}}Ab}{{{b{Gh}}{b{dA`}}}Ab}0{{{b{{ABd{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}00000000000000{{{b{dAD`}}l}cBf}{{{b{d{ACl{c}}}}l}cBf}{{{b{d{ACn{c}}}}l}cBf}`{ABh}{{}l}00000000000000{ACl}{ACn}{CbCl}{{}c{}}00000000000000{ACf}{ACh}{ACj}210{{cc}{{ACl{c}}}Bf}{{ccl}{{ACn{c}}}Bf}{ABfl}7{ABfn}0{ACfCl}{AChCl}{ACjCl}{ABhCl}132101`{{{b{dACd}}{ABd{c}}}hBf}{{{b{d{ACf{c}}}}{ABd{c}}}h{BfChK`}}{{{b{d{ACh{c}}}}{ABd{c}}}h{BfCh}}{{{b{d{ABh{c}}}}{ABd{c}}}h{BfCh}}{{{b{d{ACj{c}}}}{ABd{c}}}h{BfCh}}`{{{b{ACd}}}{{ABd{c}}}Bf}{{{b{{ACf{c}}}}}{{ABd{c}}}{BfChK`}}{{{b{{ACh{c}}}}}{{ABd{c}}}{BfCh}}{{{b{{ABh{c}}}}}{{ABd{c}}}{BfCh}}{{{b{{ACj{c}}}}}{{ABd{c}}}{BfCh}}{{{b{dACd}}{ADb{c}}}hBf}{{{b{d{ACf{c}}}}{ADb{c}}}h{BfChK`}}{{{b{d{ACh{c}}}}{ADb{c}}}h{BfCh}}{{{b{d{ABh{c}}}}{ADb{c}}}h{BfCh}}{{{b{d{ACj{c}}}}{ADb{c}}}h{BfCh}}{{{b{ADd}}{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}l}nBf}{{{b{{ADf{c}}}}{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}l}nBf}{{{b{{ABj{c}}}}{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}l}nBf}{ABjl}{ADf}{bc{}}00000{bDj}{{{b{dACd}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}Bf}{{{b{d{ACf{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfChK`}}{{{b{d{ACh{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfCh}}{{{b{d{ABh{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfCh}}{{{b{d{ACj{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfCh}}{c{{Ad{e}}}{}{}}00000000000000{{}{{Ad{c}}}{}}00000000000000{bAf}00000000000000{{}c{}}00000000000000{ABhCl}``{ACfEd}{AChEd}{ACfKh}{AChKh}{{{b{d{ACf{c}}}}{b{{Cd{c}}}}}h{BfChK`}}{{{b{d{ACh{c}}}}{b{{Cd{c}}}}}h{BfCh}}{ACf}{ACh}10{c{{ACf{c}}}{BfChK`}}{c{{ACh{c}}}{BfCh}}{ACfCl}{AChCl}10{{{ACf{c}}{Kh{ABl}}}{{ACf{c}}}{BfChK`}}{{{ACh{c}}{Kh{ABl}}}{{ACh{c}}}{BfCh}}{{{ACf{c}}c}{{ACf{c}}}{BfChK`}}{{{ACh{c}}c}{{ACh{c}}}{BfCh}}`{{{b{d{Cd{c}}}}{b{{Cn{{Cl{c}}}}}}{b{{Cn{{Cl{c}}}}}}}hBf}{ADhCl}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{ADh{c}}}}{b{{Cn{{Cl{c}}}}}}{b{{Cn{c}}}}{b{ABl}}}{{B`{{Cl{{Cl{c}}}}{Cl{{Cl{c}}}}}}}Bf}{{{b{{ADh{c}}}}}{{ADh{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{{ADh{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{ADh{c}}}}{b{{Cn{c}}}}}{{Cl{{Cl{c}}}}}Bf}{cc{}}{{}l}{{}c{}}>{{{b{{Cd{c}}}}}{{ADh{c}}}{BfK`}}{ccBf}0{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}{ADhCl}`{{{b{{ACj{c}}}}cccc}c{BfCh}}{ACjEd}{ACj}{ACjKh}{{{b{d{ACj{c}}}}{b{{Cd{c}}}}}h{BfCh}}22{{}{{ACj{c}}}{BfCh}}{ACjCl}000{{{ACj{c}}{Kh{ABl}}}{{ACj{c}}}{BfCh}}{{{ACj{c}}ccc}{{ACj{c}}}{BfCh}}`{ABhCl}{ABhEd}{ABh}000{ABhKh}1{{{b{d{ABh{c}}}}{b{{Cd{c}}}}}h{BfCh}}{{}{{ABh{c}}}{BfCh}}55{{{b{{ABh{c}}}}ccc}c{BfCh}}6{{{ABh{c}}{Kh{ABl}}}{{ABh{c}}}{BfCh}}{{{ABh{c}}ccccc}{{ABh{c}}}{BfCh}}","D":"E@h","p":[[1,"reference",null,null,1],[0,"mut"],[6,"TrainingAlgorithm",0],[1,"unit"],[1,"u8"],[1,"usize"],[1,"bool"],[5,"Formatter",2092],[8,"Result",2092],[6,"Result",2093,null,1],[5,"TypeId",2094],[6,"ActivationFunction",58],[10,"Deserializer",2095],[10,"Hasher",2096],[1,"str"],[1,"tuple",null,null,1],[10,"Serializer",2097],[5,"CandidateNeuron",102],[10,"Float",2098],[5,"CascadeTrainingRecord",102],[5,"CascadeState",102],[5,"CascadeTrainer",102],[5,"CascadeBuilder",102],[5,"CascadeConfig",102],[5,"TrainingData",2076],[5,"Network",1542],[6,"RuvFannError",417],[10,"Send",2099],[10,"Sync",2099],[5,"Vec",2100],[1,"slice"],[5,"CascadeMetrics",102],[5,"Duration",2101],[5,"CascadeNetwork",102],[10,"Clone",2102],[5,"CascadeTrainingResult",102],[5,"String",2103],[6,"CascadeError",102],[10,"Debug",2092],[1,"f64"],[1,"u64"],[6,"Option",2104,null,1],[5,"StdRng",2105],[5,"Connection",390],[10,"Deserialize",2095],[10,"PartialEq",2106],[10,"Serialize",2097],[5,"ErrorContext",417],[5,"HashMap",2107],[5,"RecoveryContext",417],[6,"NetworkErrorCategory",417],[6,"TrainingErrorCategory",417],[6,"CascadeErrorCategory",417],[6,"ValidationErrorCategory",417],[6,"IoErrorCategory",417],[6,"ErrorCategory",417],[6,"RecoveryStrategy",417],[5,"ErrorLogger",417],[6,"ValidationError",417],[6,"TrainingError",2076],[6,"NetworkError",1542],[6,"Level",2108],[10,"Into",2109,null,1],[10,"Error",2110],[5,"SystemTime",2111],[15,"Performance",722],[15,"Memory",722],[15,"Network",722],[15,"Training",722],[15,"Cascade",722],[15,"Validation",722],[15,"Io",722],[15,"Parallel",722],[15,"Compatibility",722],[15,"OutOfRange",750],[15,"InvalidConfig",750],[15,"IncompatibleParams",750],[15,"DataFormat",750],[15,"MissingParameter",750],[5,"BenchmarkResult",758],[5,"RegressionDetector",758],[5,"FannCompatibilityValidator",758],[17,"Output"],[6,"IntegrationError",758],[10,"Fn",2112],[5,"IntegrationTestSuite",758],[5,"IntegrationResult",758],[10,"Default",2113],[5,"IntegrationConfig",758],[5,"CompatibilityTest",758],[5,"PhantomData",2099],[5,"Box",2114,null,1],[6,"FileFormat",1448],[8,"IoResult",1448,1302],[10,"Read",2115],[10,"Write",2115],[5,"FannReader",1448,1307],[5,"FannWriter",1448,1307],[5,"TrainingDataReader",1448,1445],[5,"TrainingDataWriter",1448,1445],[5,"TrainingDataStreamReader",1448,1445],[5,"DotExporter",1448,1290],[6,"IoError",1448,1302],[5,"ParseIntError",2116],[5,"ParseFloatError",2117],[8,"Error",2118],[5,"Error",2119],[5,"Error",2120],[6,"LayoutDirection",1290],[5,"BinaryConfig",1103],[5,"BinaryReader",1103],[5,"BinaryWriter",1103],[5,"CompressionConfig",1170],[5,"CompressedWriter",1170],[8,"Result",2120,null,1],[5,"CompressedReader",1170],[5,"GzDecoder",2121],[5,"GzEncoder",2122],[1,"u32"],[5,"CompressionStats",1241],[5,"MockNetwork",1490],[10,"FromStr",2123],[10,"Display",2092],[5,"JsonConfig",1313],[5,"JsonReader",1313],[5,"JsonWriter",1313],[5,"StreamStats",1377],[5,"BufferedStreamReader",1377],[5,"TrainingDataStreamReader",1377],[5,"BufReader",2124],[10,"BufRead",2115],[1,"f32"],[10,"FnMut",2112],[5,"MockTrainingData",1490],[5,"Layer",1454],[5,"Neuron",1635],[5,"NetworkBuilder",1542],[10,"DeserializeOwned",2095],[10,"SampleUniform",2125],[10,"AddAssign",2126],[10,"SubAssign",2126],[10,"MulAssign",2126],[10,"PartialOrd",2106],[15,"InputSizeMismatch",1631],[15,"WeightCountMismatch",1631],[5,"TrainingState",2076],[5,"ParallelTrainingOptions",2076],[5,"Rprop",2076,2075],[5,"BitFailStopCriteria",2076],[10,"ErrorFunction",2076],[5,"MseError",2076],[5,"MaeError",2076],[5,"TanhError",2076],[10,"TrainingAlgorithm",2076],[5,"IncrementalBackprop",2076,2011],[5,"BatchBackprop",2076,2011],[5,"Quickprop",2076,2060],[5,"ExponentialDecay",2076],[5,"StepDecay",2076],[10,"LearningRateSchedule",2076],[8,"TrainingCallback",2076],[10,"StopCriteria",2076],[5,"MseStopCriteria",2076],[5,"SimpleNetwork",2033],[8,"RuvFannResult",417]],"r":[[0,58],[4,102],[5,102],[6,102],[7,102],[8,390],[9,417],[11,1454],[12,1542],[13,1542],[14,1542],[15,1635],[16,2076],[19,417],[22,2076],[23,2076],[24,2076],[25,417],[948,1302],[950,1290],[951,1302],[953,1307],[954,1307],[956,1302],[957,1302],[958,1302],[959,1302],[960,1302],[961,1302],[963,1302],[964,1302],[965,1302],[966,1445],[967,1445],[968,1445],[970,1307],[971,1307],[972,1445],[973,1445],[974,1445],[975,1290],[976,1302],[978,1307],[979,1307],[980,1445],[981,1445],[982,1445],[983,1290],[984,1302],[989,1170],[991,1170],[992,1307],[993,1307],[994,1445],[995,1445],[996,1445],[997,1290],[998,1307],[999,1307],[1000,1445],[1001,1445],[1002,1445],[1003,1290],[1004,1302],[1006,1307],[1007,1307],[1008,1445],[1009,1445],[1010,1445],[1011,1290],[1012,1302],[1015,1307],[1016,1307],[1017,1445],[1018,1445],[1019,1445],[1020,1290],[1021,1302],[1026,1302],[1027,1302],[1029,1307],[1030,1307],[1031,1445],[1032,1445],[1033,1445],[1034,1290],[1035,1302],[1036,1302],[1037,1302],[1038,1302],[1039,1302],[1040,1302],[1042,1307],[1043,1307],[1044,1445],[1045,1445],[1046,1445],[1047,1290],[1048,1302],[1050,1307],[1051,1307],[1052,1445],[1053,1445],[1054,1445],[1055,1290],[1056,1302],[1059,1290],[1060,1103],[1061,1313],[1062,1290],[1063,1290],[1064,1302],[1067,1302],[1069,1307],[1070,1307],[1071,1445],[1072,1445],[1073,1445],[1074,1290],[1075,1302],[1077,1307],[1078,1307],[1079,1445],[1080,1445],[1081,1445],[1082,1290],[1083,1302],[1085,1307],[1086,1307],[1087,1445],[1088,1445],[1089,1445],[1090,1290],[1091,1302],[1093,1307],[1094,1307],[1095,1445],[1096,1445],[1097,1445],[1098,1290],[1099,1302],[1101,1103],[1102,1313],[1281,1290],[1286,1290],[1287,1290],[1288,1290],[1289,1290],[1295,1290],[1296,1302],[1297,1302],[1298,1302],[1299,1302],[1300,1302],[1301,1302],[1304,1302],[1305,1302],[1306,1302],[1309,1307],[1310,1307],[1311,1307],[1312,1307],[1448,1445],[1449,1445],[1450,1445],[1451,1445],[1452,1445],[1453,1445],[1671,2011],[1675,2011],[1683,2060],[1684,2075],[1698,2075],[1704,2011],[1705,2011],[1706,2075],[1707,2060],[1719,2011],[1720,2011],[1721,2075],[1722,2060],[1735,2011],[1736,2011],[1737,2075],[1738,2060],[1740,2011],[1741,2011],[1742,2075],[1743,2060],[1744,2011],[1745,2011],[1746,2075],[1747,2060],[1767,2011],[1768,2011],[1769,2075],[1770,2060],[1771,2060],[1773,2075],[1774,2075],[1775,2060],[1777,2075],[1778,2075],[1779,2075],[1784,2011],[1785,2011],[1786,2075],[1787,2060],[1799,2011],[1800,2011],[1801,2075],[1802,2060],[1818,2011],[1819,2011],[1820,2075],[1821,2060],[1832,2011],[1833,2011],[1834,2075],[1835,2060],[1845,2011],[1846,2011],[1847,2075],[1848,2060],[1860,2075],[1865,2011],[1866,2011],[1867,2075],[1868,2060],[1883,2011],[1884,2011],[1885,2075],[1886,2060],[1894,2011],[1895,2011],[1896,2060],[1897,2011],[1898,2011],[1899,2060],[1906,2011],[1907,2011],[1908,2060],[1909,2075],[1910,2060],[1911,2011],[1912,2011],[1913,2060],[1914,2075],[1915,2060],[1918,2011],[1919,2011],[1920,2075],[1921,2060],[1924,2011],[1925,2011],[1926,2075],[1927,2060],[1929,2011],[1930,2011],[1931,2075],[1932,2060],[1946,2011],[1947,2011],[1948,2075],[1949,2060],[1954,2011],[1955,2011],[1956,2075],[1957,2060],[1969,2011],[1970,2011],[1971,2075],[1972,2060],[1984,2011],[1985,2011],[1986,2075],[1987,2060],[1999,2011],[2000,2011],[2001,2075],[2002,2060],[2010,2075],[2013,2011],[2014,2011],[2015,2011],[2016,2011],[2017,2011],[2018,2011],[2019,2011],[2020,2011],[2021,2011],[2022,2011],[2023,2011],[2024,2011],[2025,2011],[2026,2011],[2027,2011],[2028,2011],[2029,2011],[2030,2011],[2031,2011],[2032,2011],[2061,2060],[2062,2060],[2063,2060],[2064,2060],[2065,2060],[2066,2060],[2067,2060],[2068,2060],[2069,2060],[2070,2060],[2071,2060],[2072,2060],[2073,2060],[2074,2060],[2076,2075],[2077,2075],[2078,2075],[2079,2075],[2080,2075],[2081,2075],[2082,2075],[2083,2075],[2084,2075],[2085,2075],[2086,2075],[2087,2075],[2088,2075],[2089,2075],[2090,2075],[2091,2075]],"b":[[232,"impl-Debug-for-CascadeError"],[233,"impl-Display-for-CascadeError"],[585,"impl-Debug-for-RuvFannError"],[586,"impl-Display-for-RuvFannError"],[593,"impl-Debug-for-ValidationError"],[594,"impl-Display-for-ValidationError"],[600,"impl-From%3CTrainingError%3E-for-RuvFannError"],[601,"impl-From%3CNetworkError%3E-for-RuvFannError"],[836,"impl-Debug-for-IntegrationError"],[837,"impl-Display-for-IntegrationError"],[1026,"impl-Display-for-IoError"],[1027,"impl-Debug-for-IoError"],[1036,"impl-From%3CParseIntError%3E-for-IoError"],[1037,"impl-From%3CParseFloatError%3E-for-IoError"],[1038,"impl-From%3CBox%3CErrorKind%3E%3E-for-IoError"],[1039,"impl-From%3CError%3E-for-IoError"],[1040,"impl-From%3CError%3E-for-IoError"],[1573,"impl-Debug-for-NetworkError"],[1574,"impl-Display-for-NetworkError"],[1838,"impl-Debug-for-TrainingError"],[1839,"impl-Display-for-TrainingError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKgFrQABABMAFgAHAB8ACAApAAAAKwAAAC8AAAAxAAAAMwABADYABABOAAsAWwABAGEABgBpAAAAcwAFAHsAAACBABQAmgAAAJ0AAAChAAEApAAUALoAAAC8AAEAvwAAAMIALwD+AAAAAAEKABYBAAAYAQAAGgEAAB8BAAAhAQAAJAEAACcBAAArAQIAMAEAADIBAAA1AQAAOAELAEUBAABMAQAAUQEeAHEBAAB3AQAAeQEJAIgBCgCVAQAAmAEAAJsBAwCgAQAAqQEAAK0BAACxAQAAuwEAAL0BAAC/AQAAxQEBAMgBAADNAQAA0QEAANMBAADiAQAA5gEAAOoBbABZAgEAZQIMAH4CeQD6AgEAAQMAAAMDGAAdAywAVAMHAGYDAgBqAwMAbwMBAHYDAAB+AwAAgQMAAIMDAACHAyAAqQMIAMsDEgDhAxUA+AMIAAMEAgANBAQAEwQHACkEAAArBAEALgQfAFMECABdBA0AbAQAAHAEAgB/BAkAigQCAJgECAClBAkAsgQBALsEBADIBA0A2QQAANsEBQDiBAMA5wQAAOkEAgDuBAQA+QQIAAMFAAAFBQAACwUEACUFCAAvBQ4AQgUCAFAFDABmBQUAbgUSAIQFAwCOBQEAkQUAAJQFDQCyBQEAtQUCALkFBQDCBQAAyAUAAM0FBADVBRYA7gUCAPMFFQAMBgcAFQYCABkGAAAbBg0AMQYCADgGAABGBgAATwYBAFQGDwBoBgEAbAYCAHAGBQB4BgAAfgYAAIIGAwCHBgAAjQYAAJIGAACbBgAAnQYAAJ8GAACiBiAAxAYCAMgGAwDNBhkA6AYqABQHHQBBBwIARQcSAGcHBwBwBwAAcwcJAH8HAwCFBwMAigcPAJsHQADeBxMA9AcCAPgHBgABCAAAAwgAAAcIBQAOCA0AHQgPAA==","P":[[27,"T"],[31,""],[32,"T"],[33,""],[35,"T"],[37,""],[41,"T"],[42,""],[44,"U"],[51,"T"],[54,"U,T"],[55,"U"],[56,""],[57,"V"],[77,"T"],[79,""],[80,"T"],[81,""],[83,"T"],[85,"__D"],[86,""],[89,"T"],[90,"__H"],[91,""],[92,"U"],[93,""],[96,"__S"],[97,"T"],[98,"U,T"],[99,"U"],[100,""],[101,"V"],[120,""],[121,"T"],[122,""],[128,"T"],[155,""],[156,"T"],[157,""],[163,"T"],[168,""],[169,"T"],[177,""],[193,"T"],[196,""],[197,"T"],[218,""],[228,"T"],[229,""],[234,"T"],[239,""],[240,"T"],[252,""],[266,"T"],[267,"U"],[277,"T"],[278,""],[287,"T"],[292,""],[294,"T"],[295,""],[300,"T"],[301,""],[304,"T"],[306,""],[311,"T"],[319,""],[323,"T"],[333,""],[337,"U,T"],[347,"U"],[357,""],[367,"T"],[370,""],[372,"T"],[375,""],[376,"V"],[386,""],[391,"T"],[395,""],[396,"T"],[398,"__D,T"],[399,""],[400,"T"],[403,""],[405,"U"],[406,"T"],[407,"T,__S"],[408,"T"],[409,""],[410,"T"],[411,"U,T"],[412,"U"],[413,""],[414,"T"],[415,"V"],[416,""],[490,"T"],[514,""],[523,"T"],[531,""],[541,"T"],[565,""],[598,"T"],[600,""],[602,"T"],[612,""],[625,"U"],[637,""],[656,"T"],[664,""],[666,"U,T"],[678,"U"],[690,""],[702,"V"],[714,""],[773,"T,F"],[774,""],[779,"T"],[796,""],[800,"T"],[803,""],[810,"T"],[826,""],[841,"T"],[851,""],[859,"U"],[867,"T"],[868,""],[872,"T"],[874,""],[881,"T"],[883,""],[884,"T"],[888,""],[889,"T"],[893,""],[894,"T"],[895,""],[897,"T"],[898,""],[900,"T"],[902,""],[906,"T"],[909,""],[911,"U,T"],[919,"U"],[927,""],[936,"V"],[944,""],[970,"T"],[986,""],[987,"T"],[988,""],[989,"R,W"],[992,""],[998,"T"],[1015,""],[1029,"T"],[1036,""],[1041,"T"],[1042,""],[1050,"U"],[1059,""],[1060,"R,T"],[1062,""],[1066,"T"],[1067,""],[1069,"U,T"],[1077,"U"],[1085,""],[1093,"V"],[1101,"T,W"],[1106,"T"],[1112,""],[1113,"T"],[1114,""],[1121,"T"],[1127,""],[1132,"T"],[1135,""],[1139,"U"],[1142,""],[1146,"R,T"],[1149,"T"],[1151,"U,T"],[1154,"U"],[1157,""],[1161,"V"],[1164,""],[1166,"T,W"],[1168,"T"],[1174,""],[1175,"T"],[1181,""],[1182,"T"],[1183,""],[1185,"R,W"],[1186,""],[1187,"R,W"],[1188,""],[1189,"T"],[1195,""],[1200,"W"],[1202,""],[1203,"T"],[1206,"R"],[1207,"W"],[1208,"R"],[1209,"W"],[1210,""],[1215,"U"],[1218,"R"],[1219,""],[1220,"R"],[1221,"W"],[1222,""],[1223,"R"],[1224,"T"],[1225,"U,T"],[1228,"U"],[1231,""],[1234,"V"],[1237,"W"],[1239,""],[1240,"W"],[1242,"T"],[1244,""],[1245,"T"],[1246,""],[1249,"T"],[1251,""],[1253,"T"],[1254,""],[1255,"U"],[1256,""],[1261,"T"],[1262,"U,T"],[1263,"U"],[1264,""],[1265,"V"],[1272,"T"],[1274,""],[1275,"T"],[1276,""],[1277,"T"],[1279,""],[1281,"W"],[1282,""],[1283,"T"],[1284,""],[1285,"U"],[1286,""],[1290,"T"],[1291,"U,T"],[1292,"U"],[1293,""],[1294,"V"],[1295,""],[1311,"R,T"],[1312,"T,W"],[1316,"T"],[1322,""],[1323,"T"],[1324,""],[1331,"T"],[1337,""],[1341,"T"],[1344,""],[1348,"U"],[1351,""],[1356,"R,T"],[1359,"T"],[1360,"U,T"],[1363,"U"],[1366,""],[1369,"V"],[1372,""],[1374,"T,W"],[1380,""],[1381,"T"],[1387,"R"],[1389,""],[1393,"T"],[1394,""],[1395,"R"],[1396,""],[1397,"T"],[1403,""],[1406,"R"],[1407,""],[1408,"T"],[1411,""],[1415,"U"],[1419,""],[1420,"R"],[1421,""],[1424,"R"],[1425,"R,F"],[1427,""],[1428,"T"],[1429,"U,T"],[1432,"U"],[1435,""],[1438,"V"],[1441,""],[1442,"R"],[1443,""],[1451,"R"],[1452,"R,F"],[1453,"W"],[1455,"T"],[1462,""],[1463,"T"],[1466,"__D,T"],[1467,""],[1468,"T"],[1473,""],[1474,"U"],[1475,""],[1476,"T"],[1479,"T,__S"],[1480,"T"],[1485,"U,T"],[1486,"U"],[1487,""],[1488,"V"],[1489,"T"],[1496,""],[1498,"T"],[1500,""],[1503,"T"],[1507,"__D"],[1509,""],[1515,"T"],[1517,""],[1520,"U"],[1522,""],[1529,"__S"],[1531,"T"],[1533,"U,T"],[1535,"U"],[1537,""],[1539,"V"],[1541,""],[1549,"T"],[1558,""],[1559,"T"],[1560,""],[1562,"T"],[1569,"__D,T"],[1570,""],[1575,"T"],[1584,""],[1587,"T"],[1588,"U"],[1591,""],[1593,"T"],[1605,"T,__S"],[1606,"T"],[1615,""],[1616,"T"],[1619,"U,T"],[1622,"U"],[1625,""],[1628,"V"],[1631,""],[1638,"T"],[1645,""],[1647,"T"],[1649,"__D,T"],[1650,""],[1651,"T"],[1655,""],[1656,"U"],[1657,""],[1658,"T"],[1661,"T,__S"],[1662,"T"],[1664,""],[1665,"T"],[1666,"U,T"],[1667,"U"],[1668,""],[1670,"V"],[1694,""],[1700,"T"],[1744,""],[1748,"T"],[1749,""],[1753,"T"],[1760,""],[1766,"T"],[1771,""],[1774,"T"],[1776,""],[1780,"T"],[1814,""],[1836,"T"],[1837,""],[1840,"T"],[1860,""],[1879,"U"],[1894,""],[1900,"T"],[1902,""],[1917,"T"],[1936,""],[1938,"T"],[1944,""],[1945,"T"],[1950,"U,T"],[1965,"U"],[1980,""],[1995,"V"],[2010,""],[2017,"T"],[2019,""],[2023,"T"],[2025,""],[2029,"T"],[2035,""],[2036,"T"],[2041,""],[2042,"T"],[2044,""],[2045,"T"],[2048,""],[2049,"U"],[2050,""],[2051,"T"],[2055,"U,T"],[2056,"U"],[2057,""],[2058,"V"],[2059,""],[2061,"T"],[2062,""],[2065,"T"],[2066,""],[2068,"T"],[2069,""],[2073,"T"],[2076,""],[2084,"T"],[2086,""],[2088,"T"],[2089,""],[2090,"T"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[55037]}